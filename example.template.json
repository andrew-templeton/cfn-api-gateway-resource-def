{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Custom::ApiGatewayResourceDef sample template",
  "Parameters": {
    "MyResponseStatusCode": {
      "Type": "String",
      "Default": "200",
      "Description": "Toggle this to demo Update functionality for resource-def Resources.",
      "AllowedValues": [
        "200",
        "201",
        "202"
      ]
    }
  },
  "Resources": {
    "MyRestApi": {
      "Type": "Custom::ApiGatewayRestApi",   
      "Properties": {
        "ServiceToken": {
          "Fn::Join": [
            ":",
            [
              "arn",
              "aws",
              "lambda",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              "function",
              "cfn-api-gateway-restapi-0-6-1"
            ]
          ]
        },
        "Name": "TestForResourceDef-0-0-1"
      }
    },
    "IntegrationLambda": {
      "DependsOn": [
        "IntegrationLambdaExecutionRole"
      ],
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n",
              [
                "exports.handler = function(event, context) {",
                "  console.log('The debugging Lambda was called.');",
                "  console.log('Event: %j', event);",
                "  console.log('Context: %j', context);",
                "  event.addedProperty = 'addedValue';",
                "  context.succeed(event);",
                "};"
              ]
            ]
          }
        },
        "Description": "Lambda to integrate test asset with.",
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "IntegrationLambdaExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs",
        "Timeout": 300
      }
    },
    "IntegrationCredentialsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ 
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "apigateway.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "",
                [
                  "IntegrationCredentialsRole",
                  {
                    "Ref": "AWS::StackName"
                  }
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "lambda:InvokeFunction",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "IntegrationLambda",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "IntegrationLambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ 
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "",
                [
                  "IntegrationLambdaExecutionRole",
                  {
                    "Ref": "AWS::StackName"
                  }
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          }
        ]
      }
    },
    "MyApiDeployment": {
      "DependsOn": [
        "MyRestApi",
        "RootResourceDef"
      ],
      "Type": "Custom::ApiGatewayDeployment",
      "Properties": {
        "ServiceToken": {
          "Fn::Join": [
            ":",
            [
              "arn",
              "aws",
              "lambda",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              "function",
              "cfn-api-gateway-deployment-0-4-0"
            ]
          ]
        },
        "RestApiId": {
          "Ref": "MyRestApi"
        },
        "StageName": "deployment_0_4_0"
      }
    },
    "RootResourceDef": {
      "DependsOn": [
        "IntegrationLambda",
        "MyRestApi"
      ],
      "Type": "Custom::ApiGatewayResourceDef",
      "Properties": {
        "ServiceToken": {
          "Fn::Join": [
            ":",
            [
              "arn",
              "aws",
              "lambda",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              "function",
              "cfn-api-gateway-resource-def-0-0-1"
            ]
          ]
        },
        "RestApiId": {
          "Ref": "MyRestApi"
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "MyRestApi",
            "RootResourceId"
          ]
        },
        "Methods": [
          {
            "Method": "GET",
            "Responses": [
              {
                "SelectionPattern": ".*",
                "StatusCode": {
                  "Ref": "MyResponseStatusCode"
                },
                "Models": {
                  "application/json": "Empty"
                },
                "Templates": {
                  "application/json": {
                    "Fn::Join": [
                      "\n",
                      [
                        "{",
                        "  \"hoistedResponse\": $input.json('$')",
                        "}"
                      ]
                    ]
                  }
                },
                "Parameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Methods": "'GET'"
                }
              }
            ],
            "Request": {
              "AuthorizationType": "NONE",
              "Models": {
                "application/json": "Empty"
              },
              "Parameters": {
                "integration.request.querystring.MapMe": "method.request.querystring.MapMe"
              },
              "Type": "AWS",
              "IntegrationHttpMethod": "POST",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "IntegrationLambda",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              },
              "Credentials": {
                "Fn::GetAtt": [
                  "IntegrationCredentialsRole",
                  "Arn"
                ]
              },
              "Templates": {
                "application/json": {
                  "Fn::Join": [
                    "\n",
                    [
                      "{",
                      "  \"hello\": \"world\",",
                      "  \"MapMeFromHeader\": \"$input.params().querystring.get('MapMe')\"",
                      "}"
                    ]
                  ]
                }
              }
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "MyApiDeploymentEndpoint": {
      "Description": "The root URL of the API we just deployed",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "MyRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com/deployment_0_4_0/"
          ]
        ]
      }
    },
    "MyRestApiId": {
      "Description": "The unique ID value across your entire account for the created API.",
      "Value": {
        "Ref": "MyRestApi"
      }
    },
    "MyRestApiRootResource": {
      "Description": "The 10 char alphanum ID of the / resource for MyRestApi",
      "Value": {
        "Fn::GetAtt": [
          "MyRestApi",
          "RootResourceId"
        ]
      }
    },
    "MyMethodConsoleUrl": {
      "Description": "The AWS Console URL for inspecting the created method.",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://console.aws.amazon.com/apigateway/home?region=",
            {
              "Ref": "AWS::Region"
            },
            "#/restapis/",
            {
              "Ref": "MyRestApi"
            },
            "/resources/",
            {
              "Fn::GetAtt": [
                "MyRestApi",
                "RootResourceId"
              ]
            },
            "/methods/GET"
          ]
        ]
      }
    },
    "MyApiDeploymentId": {
      "Description": "The unique ID for the Api Gateway Deployment of MyRestApi",
      "Value": {
        "Ref": "MyApiDeployment"
      }
    }
  }
}
